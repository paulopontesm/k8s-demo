name: Build test deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install awscli
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_REPOSITORY }}
          tag_with_sha: true
          tags: latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25

      - name: Terraform Init
        run: |
          export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          export REGION=${AWS_DEFAULT_REGION:-$(aws configure get region)}
          terraform init -backend-config="bucket=terraform-state-$ACCOUNT_ID" -backend-config="region=$REGION"
        working-directory: infrastructure/main/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: infrastructure/main/

      - name: Terraform Plan
        run: terraform plan
        working-directory: infrastructure/main/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: infrastructure/main/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Helm Install
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          aws eks update-kubeconfig --name k8sdemo-cluster
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.0/cert-manager.crds.yaml
          helm dep up k8s-demo/
          helm upgrade --install k8s-demo k8s-demo/ --namespace k8s-demo \
            --create-namespace \
            --set ingress.enabled=true \
            --set ingress.hosts[0].host=${{ secrets.DOMAIN_NAME }} \
            --set ingress.hosts[0].paths[0]="/" \
            --set ingress.tls[0].hosts[0]=${{ secrets.DOMAIN_NAME }} \
            --set ingress.tls[0].secretName=k8s-demo-tls \
            --set nginxingress.enabled=true \
            --set certmanager.enabled=true \
            --set certmanager.issuer.email=${{ secrets.CERTIFICATE_REGISTRATION_EMAIL }} \
            --set image.tag="${{ secrets.DOCKER_REPOSITORY }}" \
            --set image.tag="sha-$(git rev-parse --short HEAD)"
        working-directory: chart/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
